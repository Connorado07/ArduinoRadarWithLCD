#include <Servo.h>
#include <LiquidCrystal.h>

//PROJECT MADE BY Connor D, Elijah S, & Steven H

LiquidCrystal screen(12, 11, 5, 4, 3, 2);

Servo serv;
int servoPosition = 0;
const int numReadings = 10;
int index = 0;
int total = 0; 
int average = 0;
int echoPin = 9;
int trigPin = 8;
unsigned long pulseTime = 0;
unsigned long distance = 0;


void setup() {
  //Attach Servo to pin 10
  serv.attach(10);

  //Pin modes (input & output)
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  Serial.begin(9600);
  screen.begin(16, 2);
  screen.clear();
  screen.print("Distance: ");
}


void loop() {

  
  for(servoPosition = 0; servoPosition < 180; servoPosition++){
    
    serv.write(servoPosition);
    
    for(index = 0; index <= numReadings; index++){
      digitalWrite(trigPin, LOW);
      delayMicroseconds(50);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(50);
      digitalWrite(trigPin, LOW);
      pulseTime = pulseIn(echoPin, HIGH);
      distance = pulseTime / 58;
      total = total + distance;
      delay(10);
    }
    
    average = total / numReadings;
  
    if(index >= numReadings){
      index = 0;
      total = 0;
    }
    
    Serial.print("X");
    Serial.print(servoPosition);
    Serial.print("V");
    Serial.println(average);

    screen.begin(16, 2);
    screen.print("Distance: ");
    screen.setCursor(0, 1);
    screen.print(average);
  }

  
  for (servoPosition = 180; servoPosition > 0; servoPosition--) {
    
    serv.write(servoPosition);
    for (index = 0; index <= numReadings; index++) {
      digitalWrite(trigPin, LOW);
      delayMicroseconds(50);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(50);
      digitalWrite(trigPin, LOW);
      pulseTime = pulseIn(echoPin, HIGH);
      distance = pulseTime / 58;
      total = total + distance;
      delay(10);
    }
    average = total / numReadings;
    if (index >= numReadings)  {
      index = 0;
      total = 0;
    }
    Serial.print("X");
    Serial.print(servoPosition);
    Serial.print("V");
    Serial.println(average);
  }
}
